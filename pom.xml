<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>javaDecompiler</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!-- 添加 JetBrains 的仓库以获取反编译引擎 -->
    <repositories>
        <repository>
            <id>jetbrains-releases</id>
            <url>https://www.jetbrains.com/intellij-repository/releases/</url>
        </repository>
    </repositories>
    <dependencies>
        <!-- 1. IntelliJ 反编译引擎 -->
        <dependency>
            <groupId>com.jetbrains.intellij.java</groupId>
            <artifactId>java-decompiler-engine</artifactId>
            <version>211.7442.40</version> <!-- 请检查并使用一个稳定的版本 -->
        </dependency>

        <!-- 2. 文本差异比对库 (java-diff-utils) -->
        <dependency>
            <groupId>io.github.java-diff-utils</groupId>
            <artifactId>java-diff-utils</artifactId>
            <version>4.12</version> <!-- 建议使用最新版本 -->
        </dependency>

        <!-- 可选: Google的差异比对库 -->
<!--        <dependency>-->
<!--            <groupId>org.bitbucket.b_c</groupId>-->
<!--            <artifactId>jose4j</artifactId>-->
<!--            <version>0.9.3</version> &lt;!&ndash; diff-match-patch 可能需要通过其他方式引入，或者直接拷贝源码 &ndash;&gt;-->
<!--        </dependency>-->
        <!-- 这个库专门用于提供强大的文本差异比对功能 -->
        <dependency>
            <groupId>org.bitbucket.cowwoc</groupId>
            <artifactId>diff-match-patch</artifactId>
            <version>1.2</version> <!-- 推荐使用一个较新的稳定版本 -->
        </dependency>
        <!-- 可选: 用于更丰富的字符串操作 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>1.12.0</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.16.1</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- 配置 Maven Shade 插件，将所有依赖打包到一个可执行的 JAR 文件中 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>org.example.Main</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- 新增：Maven依赖插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.6.1</version> <!-- 使用一个较新的版本 -->
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!-- 指定将所有依赖复制到项目根目录下的 target/offline-libs 文件夹 -->
                            <outputDirectory>${project.build.directory}/offline-libs</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>